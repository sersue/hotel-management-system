{"ast":null,"code":"var _jsxFileName = \"/Users/cho/Desktop/5555/hotel-management-system/client/src/components/Review_mypage.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport SelecltDate from './Date';\nimport Axios from 'axios';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nconst inform = [{\n  ID: '123',\n  name: 'KIM HA NA',\n  Email: 'qwe@naver.com',\n  Phone: '010-1234-1234',\n  card_bin: \"XXXX-XX\",\n  card_serial: \"XX-XXXX-XXXX\",\n  card_cvc: \"000\",\n  card_validity: \"00/00\",\n  card_password: \"0000\"\n}];\n\nfunction Copyright() {\n  return /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, 'Copyright © ', /*#__PURE__*/React.createElement(Link, {\n    color: \"inherit\",\n    href: \"https://material-ui.com/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Your Website\"), ' ', new Date().getFullYear(), '.');\n}\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3)\n    }\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  },\n  listItem: {\n    padding: theme.spacing(1, 0),\n    padding: 20,\n    marginLeft: 8\n  },\n  TextlistItem: {\n    padding: theme.spacing(1, 0),\n    padding: 20\n  }\n}));\nexport default function Review1() {\n  const classes = useStyles();\n  const [ID, setID] = useState('');\n  const [Email, setEmail] = useState('');\n  const [Phone, setPhone] = useState('');\n  const [card_bin, setcard_bin] = useState('');\n  const [card_cvc, setcard_cvc] = useState('');\n  const [card_validity, setcard_validity] = useState('');\n  const [card_password, setcard_password] = useState('');\n  const [card_serial, setcard_serial] = useState('');\n  const [loginstatus, setloginstatus] = useState('');\n  Axios.defaults.withCredentials = true;\n\n  const submitInfo = () => {\n    // alert(\"hi\");\n    Axios.post('http://localhost:5000/signup', {\n      // Login_ID:ID,\n      // E_Mail:Email,\n      // Phone_Number:Phone,\n      BIN_Number: card_bin,\n      CVC: card_cvc,\n      Validity: card_validity,\n      Card_Password: card_password,\n      Card_Serial: card_serial\n    }).then(alert => {\n      alert('successful insert'); // if(response.data.message){\n      //   setloginstatus(response.data.message)\n      // }\n      // else{\n      //   setloginstatus(response.data[0].Login_ID);\n      // }\n    });\n  };\n\n  useEffect(() => {\n    Axios.get('http://localhost:5000/mypage').then(response => {\n      // if(response.data.loggedIn == true){\n      // }\n      console.log(response); //login 되면 console loggedin 값 true\n    }); //get : refresh 하면 login in or not \n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.layout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h4\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"\\uB0B4 \\uC815\\uBCF4\"), /*#__PURE__*/React.createElement(List, {\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"Name\", inform.map(a => /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    key: a.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: a.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }))), \"ID\", inform.map(a => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.TextlistItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.ID,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"ID\",\n    type: \"ID\",\n    id: \"ID\",\n    autoComplete: \"current-ID\",\n    onChange: e => {\n      setID(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  })))), \"Email\", inform.map(a => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.TextlistItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.Email,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"Email\",\n    type: \"Email\",\n    id: \"Email\",\n    autoComplete: \"current-Email\",\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  })))), \"Phone Number\", inform.map(a => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.TextlistItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.Phone,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"Phone\",\n    type: \"Phone\",\n    id: \"Phone\",\n    autoComplete: \"current-Phone\",\n    onChange: e => {\n      setPhone(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  })))), \"Card Number\", inform.map(a => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.TextlistItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, \"\\uCE74\\uB4DC \\uC55E 6\\uC790\\uB9AC\", /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.card_bin,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"bin\",\n    type: \"bin\",\n    id: \"bin\",\n    autoComplete: \"current-bin\",\n    onChange: e => {\n      setcard_bin(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, \"\\uCE74\\uB4DC \\uC55E 6\\uC790\\uB9AC\\uB97C \\uC81C\\uC678\\uD55C \\uCE74\\uB4DC\\uBC88\\uD638\", /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.card_serial,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"serial\",\n    type: \"serial\",\n    id: \"serial\",\n    autoComplete: \"current-serial\",\n    onChange: e => {\n      setcard_serial(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, \"CVC \\uBC88\\uD638\", /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.card_cvc,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"cvc\",\n    type: \"cvc\",\n    id: \"cvc\",\n    autoComplete: \"current-cvc\",\n    onChange: e => {\n      setcard_cvc(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, \"\\uC720\\uD6A8\\uAE30\\uAC04(\\uB2EC/\\uB144\\uB3C4)\", /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.card_validity,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"validity\",\n    type: \"validity\",\n    id: \"validity\",\n    autoComplete: \"current-validity\",\n    onChange: e => {\n      setcard_validity(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\", /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.card_password,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    onChange: e => {\n      setcard_password(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: submitInfo,\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, \"Sign Up\")))), /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Copyright, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/cho/Desktop/5555/hotel-management-system/client/src/components/Review_mypage.js"],"names":["React","useState","useEffect","Button","makeStyles","Typography","List","ListItem","ListItemText","Grid","TextField","SelecltDate","Axios","CssBaseline","Paper","Link","inform","ID","name","Email","Phone","card_bin","card_serial","card_cvc","card_validity","card_password","Copyright","Date","getFullYear","useStyles","theme","appBar","position","layout","width","marginLeft","spacing","marginRight","breakpoints","up","paper","marginTop","marginBottom","padding","buttons","display","justifyContent","button","listItem","TextlistItem","Review1","classes","setID","setEmail","setPhone","setcard_bin","setcard_cvc","setcard_validity","setcard_password","setcard_serial","loginstatus","setloginstatus","defaults","withCredentials","submitInfo","post","BIN_Number","CVC","Validity","Card_Password","Card_Serial","then","alert","get","response","console","log","map","a","e","target","value","submit"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport SelecltDate from './Date';\nimport Axios from 'axios'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\n\nconst inform = [ {ID:'123', name:'KIM HA NA', Email:'qwe@naver.com', Phone:'010-1234-1234', card_bin:\"XXXX-XX\", \ncard_serial:\"XX-XXXX-XXXX\", card_cvc:\"000\",card_validity:\"00/00\",card_password:\"0000\"} ];\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  listItem: {\n    padding: theme.spacing(1, 0),\n    padding : 20,\n    marginLeft : 8,\n  },\n  TextlistItem: {\n    padding: theme.spacing(1, 0),\n    padding : 20,\n  },\n}));\n\nexport default function Review1() {\n  const classes = useStyles();\n\n  const [ID,setID]=useState('');\n  const [Email,setEmail]=useState('');\n  const [Phone,setPhone] = useState('');\n  const [card_bin,setcard_bin] = useState('');\n  const [card_cvc,setcard_cvc] = useState('');\n  const [card_validity,setcard_validity] = useState('');\n  const [card_password,setcard_password] = useState('');\n  const [card_serial,setcard_serial]=useState('');\n\n  const [loginstatus,setloginstatus] = useState('');\n  Axios.defaults.withCredentials = true;\n\n  const submitInfo = () => {\n    // alert(\"hi\");\n    Axios.post('http://localhost:5000/signup',{\n      // Login_ID:ID,\n      // E_Mail:Email,\n      // Phone_Number:Phone,\n      BIN_Number:card_bin,\n      CVC:card_cvc,\n      Validity:card_validity,\n      Card_Password:card_password,\n      Card_Serial:card_serial\n    }).then((alert)=>{\n      alert('successful insert');\n      // if(response.data.message){\n      //   setloginstatus(response.data.message)\n      // }\n      // else{\n      //   setloginstatus(response.data[0].Login_ID);\n      // }\n    });\n  };\n  useEffect(()=>{\n    Axios.get('http://localhost:5000/mypage').then((response)=>{\n      // if(response.data.loggedIn == true){\n        \n      // }\n      console.log(response); //login 되면 console loggedin 값 true\n    }); //get : refresh 하면 login in or not \n\n  },[]);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            내 정보\n          </Typography>\n      <List disablePadding>\n        Name\n        {inform.map((a) => (\n          <ListItem className={classes.listItem} key={a.name} >\n            <ListItemText primary={a.name}/>\n          </ListItem>\n        ))}\n        ID\n        {inform.map((a) => (\n          <Grid container spacing={2} className={classes.TextlistItem}>\n            <Grid item xs={10}>\n            <TextField\n            defaultValue = {a.ID}\n            variant=\"outlined\"\n            required\n            fullWidth\n            name=\"ID\"\n            type=\"ID\"\n            id=\"ID\"\n            autoComplete=\"current-ID\"\n            onChange={(e) => {\n              setID(e.target.value);\n              }}\n            \n          /></Grid>\n          </Grid>\n        ))}\n        Email\n        {inform.map((a) => (\n          <Grid container spacing={2} className={classes.TextlistItem}>\n            <Grid item xs={10}>\n            <TextField\n            defaultValue = {a.Email}\n            variant=\"outlined\"\n            required\n            fullWidth\n            name=\"Email\"\n            type=\"Email\"\n            id=\"Email\"\n            autoComplete=\"current-Email\"\n            onChange={(e) => {\n              setEmail(e.target.value);\n              }}\n          /></Grid>\n          </Grid>\n          \n        ))}\n        Phone Number\n        {inform.map((a) => (\n          <Grid container spacing={2} className={classes.TextlistItem}>\n          <Grid item xs={10}>\n          <TextField\n          defaultValue = {a.Phone}\n          variant=\"outlined\"\n          required\n          fullWidth\n          name=\"Phone\"\n          type=\"Phone\"\n          id=\"Phone\"\n          autoComplete=\"current-Phone\"\n          onChange={(e) => {\n            setPhone(e.target.value);\n              }}\n        /></Grid>\n        </Grid>\n        ))}\n        Card Number\n        {inform.map((a) => (\n          <Grid container spacing={2} className={classes.TextlistItem}>\n          <Grid item xs={5}>\n            카드 앞 6자리\n          <TextField\n          defaultValue = {a.card_bin}\n          variant=\"outlined\"\n          required\n          fullWidth\n          name=\"bin\"\n          type=\"bin\"\n          id=\"bin\"\n          autoComplete=\"current-bin\"\n          onChange={(e) => {\n            setcard_bin(e.target.value);\n              }}\n        /></Grid>\n        <Grid item xs={5}>\n            카드 앞 6자리를 제외한 카드번호\n          <TextField\n          defaultValue = {a.card_serial}\n          variant=\"outlined\"\n          required\n          fullWidth\n          name=\"serial\"\n          type=\"serial\"\n          id=\"serial\"\n          autoComplete=\"current-serial\"\n          onChange={(e) => {\n            setcard_serial(e.target.value);\n              }}\n\n\n        /></Grid>\n        <Grid item xs={3}>\n            CVC 번호\n          <TextField\n          defaultValue = {a.card_cvc}\n          variant=\"outlined\"\n          required\n          fullWidth\n          name=\"cvc\"\n          type=\"cvc\"\n          id=\"cvc\"\n          autoComplete=\"current-cvc\"\n          onChange={(e) => {\n            setcard_cvc(e.target.value);\n              }}\n        /></Grid>\n        <Grid item xs={10}>\n            유효기간(달/년도)\n            <TextField\n          defaultValue = {a.card_validity}\n          variant=\"outlined\"\n          required\n          fullWidth\n          name=\"validity\"\n          type=\"validity\"\n          id=\"validity\"\n          autoComplete=\"current-validity\"\n          onChange={(e) => {\n            setcard_validity(e.target.value);\n              }}\n        />\n        </Grid>\n            <Grid item xs={5}>\n            비밀번호\n          <TextField\n          defaultValue = {a.card_password}\n          variant=\"outlined\"\n          required\n          fullWidth\n          name=\"password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          onChange={(e) => {\n            setcard_password(e.target.value);\n              }}\n        /></Grid>\n        <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick = {submitInfo}\n            href='/'\n          >\n            Sign Up\n          </Button>\n\n        </Grid>\n        \n        ))}\n      </List>\n      <React.Fragment>\n          {/* <div className={classes.buttons}>\n                  {\n                    <Button \n                    href='/'\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={onclick} \n                    className={classes.button}\n                    // onClick = {submitInfo}\n                    >\n                      수정하기\n                    </Button>\n                }\n                </div> */}\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}