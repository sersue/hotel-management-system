{"ast":null,"code":"var _jsxFileName = \"/Users/moonsuelym/Desktop/management/client/src/components/Review_mypage.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport SelecltDate from './Date';\nconst inform = [{\n  ID: '123',\n  name: 'KIM HA NA',\n  Email: 'qwe@naver.com',\n  Phone: '010-1234-1234',\n  card_bin: \"XXXX-XX\",\n  card_serial: \"XX-XXXX-XXXX\",\n  card_cvc: \"000\",\n  card_validity: \"00/00\",\n  card_password: \"0000\"\n}];\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n    padding: 20,\n    marginLeft: 8\n  },\n  TextlistItem: {\n    padding: theme.spacing(1, 0),\n    padding: 20\n  }\n}));\nexport default function Review1() {\n  const classes = useStyles();\n\n  const submitInfo = () => {\n    alert(\"hi\");\n    Axios.post('http://localhost:5000/signup', {}).then(() => {\n      alert('successful insert');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Name\", inform.map(a => /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    key: a.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: a.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }))), \"ID\", inform.map(a => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.TextlistItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.ID,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"ID\",\n    type: \"ID\",\n    id: \"ID\",\n    autoComplete: \"current-ID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })))), \"Email\", inform.map(a => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.TextlistItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.Email,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"Email\",\n    type: \"Email\",\n    id: \"Email\",\n    autoComplete: \"current-Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })))), \"Phone Number\", inform.map(a => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.TextlistItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.Phone,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"Phone\",\n    type: \"Phone\",\n    id: \"Phone\",\n    autoComplete: \"current-Phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })))), \"Card Number\", inform.map(a => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.TextlistItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"\\uCE74\\uB4DC \\uC55E 6\\uC790\\uB9AC\", /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.card_bin,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"bin\",\n    type: \"bin\",\n    id: \"bin\",\n    autoComplete: \"current-bin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"\\uCE74\\uB4DC \\uC55E 6\\uC790\\uB9AC\\uB97C \\uC81C\\uC678\\uD55C \\uCE74\\uB4DC\\uBC88\\uD638\", /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.card_serial,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"serial\",\n    type: \"serial\",\n    id: \"serial\",\n    autoComplete: \"current-serial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"CVC \\uBC88\\uD638\", /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.card_cvc,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"cvc\",\n    type: \"cvc\",\n    id: \"cvc\",\n    autoComplete: \"current-cvc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"\\uC720\\uD6A8\\uAE30\\uAC04(\\uB2EC/\\uB144\\uB3C4)\", /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.card_validity,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"validity\",\n    type: \"validity\",\n    id: \"validity\",\n    autoComplete: \"current-validity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\", /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: a.card_password,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/moonsuelym/Desktop/management/client/src/components/Review_mypage.js"],"names":["React","makeStyles","Typography","List","ListItem","ListItemText","Grid","TextField","SelecltDate","inform","ID","name","Email","Phone","card_bin","card_serial","card_cvc","card_validity","card_password","useStyles","theme","listItem","padding","spacing","marginLeft","TextlistItem","Review1","classes","submitInfo","alert","Axios","post","then","map","a"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport SelecltDate from './Date';\n\nconst inform = [ {ID:'123', name:'KIM HA NA', Email:'qwe@naver.com', Phone:'010-1234-1234', card_bin:\"XXXX-XX\", \ncard_serial:\"XX-XXXX-XXXX\", card_cvc:\"000\",card_validity:\"00/00\",card_password:\"0000\"} ];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  listItem: {\n    padding: theme.spacing(1, 0),\n    padding : 20,\n    marginLeft : 8,\n  },\n  TextlistItem: {\n    padding: theme.spacing(1, 0),\n    padding : 20,\n  },\n}));\n\nexport default function Review1() {\n  const classes = useStyles();\n\n  const submitInfo = () => {\n    alert(\"hi\");\n    Axios.post('http://localhost:5000/signup',{\n      \n\n    }).then(()=>{\n      alert('successful insert');\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <List disablePadding>\n        Name\n        {inform.map((a) => (\n          <ListItem className={classes.listItem} key={a.name} >\n            <ListItemText primary={a.name}/>\n          </ListItem>\n        ))}\n        ID\n        {inform.map((a) => (\n          <Grid container spacing={2} className={classes.TextlistItem}>\n            <Grid item xs={10}>\n            <TextField\n            defaultValue = {a.ID}\n            variant=\"outlined\"\n            required\n            fullWidth\n            name=\"ID\"\n            type=\"ID\"\n            id=\"ID\"\n            autoComplete=\"current-ID\"\n          /></Grid>\n          </Grid>\n        ))}\n        Email\n        {inform.map((a) => (\n          <Grid container spacing={2} className={classes.TextlistItem}>\n            <Grid item xs={10}>\n            <TextField\n            defaultValue = {a.Email}\n            variant=\"outlined\"\n            required\n            fullWidth\n            name=\"Email\"\n            type=\"Email\"\n            id=\"Email\"\n            autoComplete=\"current-Email\"\n          /></Grid>\n          </Grid>\n          \n        ))}\n        Phone Number\n        {inform.map((a) => (\n          <Grid container spacing={2} className={classes.TextlistItem}>\n          <Grid item xs={10}>\n          <TextField\n          defaultValue = {a.Phone}\n          variant=\"outlined\"\n          required\n          fullWidth\n          name=\"Phone\"\n          type=\"Phone\"\n          id=\"Phone\"\n          autoComplete=\"current-Phone\"\n        /></Grid>\n        </Grid>\n        ))}\n        Card Number\n        {inform.map((a) => (\n          <Grid container spacing={2} className={classes.TextlistItem}>\n          <Grid item xs={5}>\n            카드 앞 6자리\n          <TextField\n          defaultValue = {a.card_bin}\n          variant=\"outlined\"\n          required\n          fullWidth\n          name=\"bin\"\n          type=\"bin\"\n          id=\"bin\"\n          autoComplete=\"current-bin\"\n        /></Grid>\n        <Grid item xs={5}>\n            카드 앞 6자리를 제외한 카드번호\n          <TextField\n          defaultValue = {a.card_serial}\n          variant=\"outlined\"\n          required\n          fullWidth\n          name=\"serial\"\n          type=\"serial\"\n          id=\"serial\"\n          autoComplete=\"current-serial\"\n        /></Grid>\n        <Grid item xs={3}>\n            CVC 번호\n          <TextField\n          defaultValue = {a.card_cvc}\n          variant=\"outlined\"\n          required\n          fullWidth\n          name=\"cvc\"\n          type=\"cvc\"\n          id=\"cvc\"\n          autoComplete=\"current-cvc\"\n        /></Grid>\n        <Grid item xs={10}>\n            유효기간(달/년도)\n            <TextField\n          defaultValue = {a.card_validity}\n          variant=\"outlined\"\n          required\n          fullWidth\n          name=\"validity\"\n          type=\"validity\"\n          id=\"validity\"\n          autoComplete=\"current-validity\"\n        />\n        </Grid>\n            <Grid item xs={5}>\n            비밀번호\n          <TextField\n          defaultValue = {a.card_password}\n          variant=\"outlined\"\n          required\n          fullWidth\n          name=\"password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        /></Grid>\n        </Grid>\n        ))}\n      </List>\n    \n    </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}