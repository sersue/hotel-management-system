{"ast":null,"code":"var _jsxFileName = \"/Users/chunghojung/Desktop/hotel-management-system/client/src/components/SelectRoomform.js\";\nimport React, { useState, useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport StarIcon from '@material-ui/icons/StarBorder';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { PricingTable, PricingSlot, PricingDetail } from 'react-pricing-table';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none'\n    }\n  },\n  button: {\n    margin: 0\n  },\n  buttongrid: {\n    padding: theme.spacing(1, 0.5, 1)\n  },\n  button4: {\n    backgroundColor: 'green',\n    padding: \".285rem .815rem\",\n    border: \"1px solid teal\",\n    borderRadius: \".25rem\",\n    fontSize: \"1rem\",\n    lineHeight: 1.5\n  },\n  button2: {\n    backgroundColor: '#00ff68',\n    padding: \".285rem .815rem\",\n    border: \"1px solid teal\",\n    borderRadius: \".25rem\",\n    fontSize: \"1rem\",\n    lineHeight: 1.5\n  },\n  button1: {\n    backgroundColor: '#ff7f00',\n    padding: \".285rem .815rem\",\n    border: \"1px solid teal\",\n    borderRadius: \".25rem\",\n    fontSize: \"1rem\",\n    lineHeight: 1.5\n  },\n  gridbox: {\n    border: '2px solid #d3d3d3',\n    borderRadius: '5px'\n  },\n  button3: {\n    backgroundColor: '#cbff00',\n    padding: \".285rem .815rem\",\n    border: \"1px solid teal\",\n    borderRadius: \".25rem\",\n    fontSize: \"1rem\",\n    lineHeight: 1.5\n  },\n  button5: {\n    backgroundColor: '#dcb8d8',\n    padding: \".285rem .815rem\",\n    border: \"1px solid teal\",\n    borderRadius: \".25rem\",\n    fontSize: \"1rem\",\n    lineHeight: 1.5\n  },\n  button6: {\n    backgroundColor: 'blue',\n    padding: \".285rem .815rem\",\n    border: \"1px solid teal\",\n    borderRadius: \".25rem\",\n    fontSize: \"1rem\",\n    lineHeight: 1.5\n  },\n  button7: {\n    backgroundColor: 'blue',\n    padding: \".285rem .815rem\",\n    border: \"1px solid teal\",\n    borderRadius: \".25rem\",\n    fontSize: \"1rem\",\n    lineHeight: 1.5\n  }\n}));\nexport default function Selectroom({\n  Getroomnuber,\n  CheckIn,\n  CheckOut\n}) {\n  const [roomnumber, setroomnumber] = useState([]);\n  const [floor, setfloor] = useState([2, 3]);\n  const [tiers, settiers] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    Axios.post('http://localhost:5000/reservation/getroom', {\n      Check_In: CheckIn,\n      Check_Out: CheckOut\n    }).then(response => {\n      settiers(response.data);\n    });\n    console.log(tiers);\n  }, []);\n\n  const handleChange = (event, newValue) => {\n    setfloor(newValue);\n  };\n\n  const selectroombutton = data => {\n    if (roomnumber.indexOf(data) > -1) {\n      roomnumber.splice(roomnumber.indexOf(data), 1);\n    } else {\n      roomnumber.push(data);\n      setroomnumber(roomnumber);\n      Getroomnuber(roomnumber);\n    }\n  };\n\n  function getbutton(tier, floor) {\n    if (floor[0] <= tier.floor && floor[1] >= tier.floor) {\n      switch (tier.type) {\n        case 'Single':\n          if (tier.res) {\n            return /*#__PURE__*/React.createElement(Grid, {\n              className: classes.buttongrid,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: classes.button1,\n              disabled: true,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }\n            }, tier.title));\n            break;\n          } else {\n            return /*#__PURE__*/React.createElement(Grid, {\n              className: classes.buttongrid,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: classes.button1,\n              onClick: () => selectroombutton(tier.title),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }\n            }, tier.title));\n            break;\n          }\n\n        case 'Twin':\n          if (tier.res) {\n            return /*#__PURE__*/React.createElement(Grid, {\n              className: classes.buttongrid,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: classes.button2,\n              disabled: true,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }\n            }, tier.title));\n            break;\n          } else {\n            return /*#__PURE__*/React.createElement(Grid, {\n              className: classes.buttongrid,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: classes.button2,\n              onClick: () => selectroombutton(tier.title),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }\n            }, tier.title));\n            break;\n          }\n\n        case 'Double':\n          if (tier.res) {\n            return /*#__PURE__*/React.createElement(Grid, {\n              className: classes.buttongrid,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: classes.button3,\n              disabled: true,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }\n            }, tier.title));\n            break;\n          } else {\n            return /*#__PURE__*/React.createElement(Grid, {\n              className: classes.buttongrid,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: classes.button3,\n              onClick: () => selectroombutton(tier.title),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }\n            }, tier.title));\n            break;\n          }\n\n        case 'Triple':\n          if (tier.res) {\n            return /*#__PURE__*/React.createElement(Grid, {\n              className: classes.buttongrid,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: classes.button4,\n              disabled: true,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }\n            }, tier.title));\n            break;\n          } else {\n            return /*#__PURE__*/React.createElement(Grid, {\n              className: classes.buttongrid,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: classes.button4,\n              onClick: () => selectroombutton(tier.title),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }\n            }, tier.title));\n            break;\n          }\n\n        case 'Derux_Twin':\n          if (tier.res) {\n            return /*#__PURE__*/React.createElement(Grid, {\n              className: classes.buttongrid,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: classes.button5,\n              disabled: true,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }\n            }, tier.title));\n            break;\n          } else {\n            return /*#__PURE__*/React.createElement(Grid, {\n              className: classes.buttongrid,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: classes.button5,\n              onClick: () => selectroombutton(tier.title),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }\n            }, tier.title));\n            break;\n          }\n\n        case 'Ondol':\n          if (tier.res) {\n            return /*#__PURE__*/React.createElement(Grid, {\n              className: classes.buttongrid,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: classes.button6,\n              disabled: true,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }\n            }, tier.title));\n            break;\n          } else {\n            return /*#__PURE__*/React.createElement(Grid, {\n              className: classes.buttongrid,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: classes.button6,\n              onClick: () => selectroombutton(tier.title),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }\n            }, tier.title));\n            break;\n          }\n\n        case 'Sweet':\n          if (tier.res) {\n            return /*#__PURE__*/React.createElement(Grid, {\n              className: classes.buttongrid,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: classes.button7,\n              disabled: true,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 33\n              }\n            }, tier.title));\n            break;\n          } else {\n            return /*#__PURE__*/React.createElement(Grid, {\n              className: classes.buttongrid,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: classes.button7,\n              onClick: () => selectroombutton(tier.title),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }\n            }, tier.title));\n            break;\n          }\n\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    component: \"main\",\n    className: classes.heroContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h2\",\n    align: \"center\",\n    color: \"textPrimary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }, \"Select Room\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: floor,\n    onChange: handleChange,\n    valueLabelDisplay: \"auto\",\n    step: 1,\n    min: 2,\n    max: 8,\n    \"aria-labelledby\": \"range-slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      minHeight: 35\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.gridbox,\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  }, tiers.map(tier => getbutton(tier, floor)))));\n}","map":{"version":3,"sources":["/Users/chunghojung/Desktop/hotel-management-system/client/src/components/SelectRoomform.js"],"names":["React","useState","useEffect","AppBar","Button","Card","CardActions","CardContent","CardHeader","CssBaseline","Grid","StarIcon","Typography","makeStyles","Container","PricingTable","PricingSlot","PricingDetail","Slider","MenuItem","Select","Axios","useStyles","theme","ul","margin","padding","listStyle","button","buttongrid","spacing","button4","backgroundColor","border","borderRadius","fontSize","lineHeight","button2","button1","gridbox","button3","button5","button6","button7","Selectroom","Getroomnuber","CheckIn","CheckOut","roomnumber","setroomnumber","floor","setfloor","tiers","settiers","classes","post","Check_In","Check_Out","then","response","data","console","log","handleChange","event","newValue","selectroombutton","indexOf","splice","push","getbutton","tier","type","res","title","heroContent","minHeight","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport StarIcon from '@material-ui/icons/StarBorder';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { PricingTable, PricingSlot, PricingDetail } from 'react-pricing-table';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Axios from 'axios';\nconst useStyles = makeStyles((theme) => ({\n    '@global': {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: 'none',\n        },\n    }, button: {\n        margin: 0,\n    }, buttongrid: {\n        padding: theme.spacing(1, 0.5, 1),\n    }, button4: {\n        backgroundColor: 'green',\n        padding: \".285rem .815rem\",\n        border: \"1px solid teal\",\n        borderRadius: \".25rem\",\n        fontSize: \"1rem\",\n        lineHeight: 1.5,\n\n    }, button2: {\n        backgroundColor: '#00ff68',\n        padding: \".285rem .815rem\",\n        border: \"1px solid teal\",\n        borderRadius: \".25rem\",\n        fontSize: \"1rem\",\n        lineHeight: 1.5,\n    },\n    button1: {\n        backgroundColor: '#ff7f00',\n        padding: \".285rem .815rem\",\n        border: \"1px solid teal\",\n        borderRadius: \".25rem\",\n        fontSize: \"1rem\",\n        lineHeight: 1.5,\n\n    }, gridbox: {\n        border: '2px solid #d3d3d3',\n        borderRadius: '5px',\n    },\n    button3: {\n        backgroundColor: '#cbff00',\n        padding: \".285rem .815rem\",\n        border: \"1px solid teal\",\n        borderRadius: \".25rem\",\n        fontSize: \"1rem\",\n        lineHeight: 1.5,\n\n    },\n    button5: {\n        backgroundColor: '#dcb8d8',\n        padding: \".285rem .815rem\",\n        border: \"1px solid teal\",\n        borderRadius: \".25rem\",\n        fontSize: \"1rem\",\n        lineHeight: 1.5,\n\n    },\n    button6: {\n        backgroundColor: 'blue',\n        padding: \".285rem .815rem\",\n        border: \"1px solid teal\",\n        borderRadius: \".25rem\",\n        fontSize: \"1rem\",\n        lineHeight: 1.5,\n\n    },\n    button7: {\n        backgroundColor: 'blue',\n        padding: \".285rem .815rem\",\n        border: \"1px solid teal\",\n        borderRadius: \".25rem\",\n        fontSize: \"1rem\",\n        lineHeight: 1.5,\n\n    },\n\n}));\n\n\n\nexport default function Selectroom({ Getroomnuber, CheckIn, CheckOut }) {\n    const [roomnumber, setroomnumber] = useState([]);\n    const [floor, setfloor] = useState([2, 3]);\n    const [tiers, settiers] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        Axios.post('http://localhost:5000/reservation/getroom', {\n            Check_In: CheckIn,\n            Check_Out: CheckOut,\n        }).then((response) => {\n            settiers(response.data);\n        });\n        console.log(tiers);\n\n    }, []);\n\n    const handleChange = (event, newValue) => {\n        setfloor(newValue);\n    };\n\n    const selectroombutton = (data) => {\n\n        if (roomnumber.indexOf(data) > -1) {\n            roomnumber.splice(roomnumber.indexOf(data), 1)\n        } else {\n            roomnumber.push(data)\n            setroomnumber(roomnumber);\n            Getroomnuber(roomnumber)\n        }\n    };\n\n\n    function getbutton(tier, floor) {\n        if (floor[0] <= tier.floor && floor[1] >= tier.floor) {\n            switch (tier.type) {\n\n                case 'Single':\n                    if (tier.res) {\n                        return (\n                            <Grid className={classes.buttongrid}>\n                                <button className={classes.button1} disabled>\n                                    {tier.title}\n                                </button>\n                            </Grid>\n                        )\n                        break;\n                    } else {\n                        return (\n                            <Grid className={classes.buttongrid} >\n                                <button className={classes.button1} onClick={() => selectroombutton(tier.title)}>\n                                    {tier.title}\n                                </button>\n                            </Grid>\n                        )\n                        break;\n                    }\n\n                case 'Twin':\n                    if (tier.res) {\n                        return (\n                            <Grid className={classes.buttongrid} >\n                                <button className={classes.button2} disabled>\n                                    {tier.title}\n                                </button>\n                            </Grid>\n                        )\n                        break;\n                    } else {\n                        return (\n                            <Grid className={classes.buttongrid} >\n                                <button className={classes.button2} onClick={() => selectroombutton(tier.title)}>\n                                    {tier.title}\n                                </button>\n                            </Grid>\n                        )\n                        break;\n                    }\n                case 'Double':\n                    if (tier.res) {\n                        return (\n                            <Grid className={classes.buttongrid} >\n                                <button className={classes.button3} disabled>\n                                    {tier.title}\n                                </button>\n                            </Grid>\n                        )\n                        break;\n                    } else {\n                        return (\n                            <Grid className={classes.buttongrid} >\n                                <button className={classes.button3} onClick={() => selectroombutton(tier.title)}>\n                                    {tier.title}\n                                </button>\n                            </Grid>\n                        )\n                        break;\n                    }\n                case 'Triple':\n                    if (tier.res) {\n                        return (\n                            <Grid className={classes.buttongrid} >\n                                <button className={classes.button4} disabled>\n                                    {tier.title}\n                                </button>\n                            </Grid>\n                        )\n                        break;\n                    } else {\n                        return (\n                            <Grid className={classes.buttongrid} >\n                                <button className={classes.button4} onClick={() => selectroombutton(tier.title)}>\n                                    {tier.title}\n                                </button>\n                            </Grid>\n                        )\n                        break;\n                    }\n                case 'Derux_Twin':\n                    if (tier.res) {\n                        return (\n                            <Grid className={classes.buttongrid} >\n                                <button className={classes.button5} disabled>\n                                    {tier.title}\n                                </button>\n                            </Grid>\n                        )\n                        break;\n                    } else {\n                        return (\n                            <Grid className={classes.buttongrid} >\n                                <button className={classes.button5} onClick={() => selectroombutton(tier.title)}>\n                                    {tier.title}\n                                </button>\n                            </Grid>\n                        )\n                        break;\n                    }\n                case 'Ondol':\n                    if (tier.res) {\n                        return (\n                            <Grid className={classes.buttongrid} >\n                                <button className={classes.button6} disabled >\n                                    {tier.title}\n                                </button>\n                            </Grid>\n                        )\n                        break;\n                    } else {\n                        return (\n                            <Grid className={classes.buttongrid} >\n                                <button className={classes.button6} onClick={() => selectroombutton(tier.title)}>\n                                    {tier.title}\n                                </button>\n                            </Grid>\n                        )\n                        break;\n                    }\n                case 'Sweet':\n                    if (tier.res) {\n                        return (\n                            <Grid className={classes.buttongrid} >\n                                <button className={classes.button7} disabled>\n                                    {tier.title}\n                                </button>\n                            </Grid>\n                        )\n                        break;\n                    } else {\n                        return (\n                            <Grid className={classes.buttongrid} >\n                                <button className={classes.button7} onClick={() => selectroombutton(tier.title)}>\n                                    {tier.title}\n                                </button>\n                            </Grid>\n                        )\n                        break;\n                    }\n\n\n            }\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                    Select Room\n                </Typography>\n            </Container>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Slider\n                        value={floor}\n                        onChange={handleChange}\n                        valueLabelDisplay=\"auto\"\n                        step={1}\n                        min={2}\n                        max={8}\n                        aria-labelledby=\"range-slider\"\n                    />\n                    <div style={{ minHeight: 35 }}></div>\n                </Grid>\n                <Grid container className={classes.gridbox} item xs={12} >\n                    {tiers.map((tier) => (\n                        getbutton(tier, floor)\n                    ))}\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}